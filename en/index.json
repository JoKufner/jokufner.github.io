[{"content":" Hinweis: Du liest hier menschgemachten Content. Die Funktion der hier beschriebenen Logik wurde getestet und entstammt keiner \u0026ldquo;KI-Phantasie\u0026rdquo;. Ich hoffe du findest hier Erkenntnis und Mehrwert für dich oder dein Unternehmen. Viel Freude beim Lesen.\nKurzfassung: Zweiter Teil der Reihe zum Ticketsystem mit Microsoft 265 und Power Automate. Den ersten Teil findest du hier: Einfaches Ticketsystem mit Microsoft Forms, Planner \u0026amp; Power Automate – Schritt-für-Schritt zur schnellen Ticketlösung in Microsoft 365\nAusgangssituation und Zielbild Im ersten Teil dieser Reihe wuede ein kleines Ticketsystem mittels Microsoft Forms und Microsoft Planner erstellt. Die Logik wurde in Power Automate ergänzt. Um die Kommunikation mit den Anforderern sicherzustellen wurde die übermittelte E-Mail Adresse im ersten Checklisten-Element der Planner-Aufgabe gespeichert.\nIm zweiten Teil wird nun eine kleine Sharepoint-Liste ergänzt. Diese hat zum Zweck die Anforderer-E-Mail sowie einen Referenzstatus zu speichern. Damit werden zwei neue Features ermöglicht:\nDie Checkliste kann in vollem Umfang genutzt werden. Statusänderungen können erkannt werden. Anforderer können so über Änderungen am Ticketstatus informiert werden. Z.B. \u0026ldquo;das Ticket ist nun in Bearbeitung\u0026rdquo;. Die Sharpoint-Liste Um eine Sharepoint-Liste zu erstellen wechseln Sie auf eine geeignete Sharepoint-Seite (z.B.: office.com) / Apps / Sharepoint / \u0026laquo;Eine Ihrer SP-Seiten\u0026raquo;. Hier finden Sie unter Webseiteninhalte die Möglichkeit eine neue Liste zu erstellen.\nFür dieses Beispiel habe ch eine Liste \u0026ldquo;Planner-Ticketsystem-Referenz\u0026rdquo; mit folgenden Spalten erstellt:\nTitel (Default-Titel. Wird systemseitig mit der Liste erstellt) E-Mail (Text) Statusreferenz (Text) Spalten der Sharepoint-Liste.\nAnpassung Power Automate Flow \u0026ldquo;YT_Ticketsystem_neues_Ticket\u0026rdquo; Im letzten Teil wurde der Flow \u0026ldquo;YT_Ticketsystem_neues_Ticket\u0026rdquo; erstellt. Dieser wird nun ergänzt, um E-Mail (der Anforderer) sowie den letzten bekannten Status in die Referenzliste zu schreiben.\nHierfür sinc folgende Tätigkeiten notwendig:\nLöschen der Aktion \u0026ldquo;Update task detail\u0026rdquo; und Ergänzen einer Aufgabe \u0026ldquo;Create Item\u0026rdquo; um die Referenzzeile in die SP-Liste zu schreiben Aktion Create item Um die Neue Aktion anzulegen Suche den Connector \u0026ldquo;Sharepoint\u0026rdquo; und die Aktion \u0026ldquo;Create item\u0026rdquo; (deutsch: Element ersellen).\nWählen Sie folgendes in der Aktion aus\nSite Address: Adresse deine Sharpont-Seite (Drop-Down) List Name: Die neu erstellte Liste Titel: Die id der neu erstellten Planner-Aufgabe (Aus Aktion \u0026ldquo;Create a Task\u0026rdquo;). E-Mail: Die E-Mail des übermittelnden Benutzers (Responders E-Mail (aus dem Trigger)) Die fertige Aufgabe sollte so aussehen:\nDie neue Aktion \u0026lsquo;Create item\u0026rsquo;\nSchematisch sieht das ganze nun so aus: Die Anlage eines neuen Tickets\nDas Foms-Formular wird übermittelt und Triggert den PA-Flow Der Flow legt die Planner-Aufgabe als auch das SP-Listenelement an. Das SP-Listenelement enthält eine Referenz auf die Planner-Aufgabe. Ein erster Eintrag in der Sp-Liste:\nEin erster Eintrag in der SP-Liste. Die Statusreferenz unbekannt ist so gewollt um einabweichen vom eigentlichen Status zu erkennen\nAnpassung Flow \u0026ldquo;YT Ticketsystem_Abschluss\u0026rdquo; Um im Rahmen des Abschlusses des Tickets (im Planner) an die Anforderer zu kommunizieren muss noch der Flow \u0026ldquo;YT Ticketsystem_Abschluss\u0026rdquo; angepasst werden:\nErgänze eine Aktion \u0026ldquo;Get items\u0026rdquo; Referenziere für die Empfänger-E-Mail (Teams-Nachricht) das erste Element aus Get items Aktion Get items Get items fragt die SP-Listenelemente aus der neu erstellten Liste ab. Um nur das eine relevante Listenelement zurückzubekommen muss ein OData Query-Filter ergänzt werden:\nDer OData-Filter:\nTitle eq \u0026#39;@{outputs(\u0026#39;Get_task_details\u0026#39;)?[\u0026#39;body/id\u0026#39;]}\u0026#39; Die neue Aktion \u0026lsquo;get items\u0026rsquo;\nAktion \u0026ldquo;Get user profile (V2)\u0026rdquo; Die o.g. Aktion ruft den anforderndern Benutzer im Azur AD ab. Die Ermittelten Informationen (Anredename und E-Mail) werden darauf folgend genutzt, um eine Information an den anfordernden Nutzer zu senden.\nUm hier nun die E-Mail aus der Sharepoint-Liste zu referenzieren gib in der Aktion (Feld User (UPN)) folgenden Ausdruck ein:\nbody(\u0026#39;Get_items\u0026#39;)?[\u0026#39;value\u0026#39;][0][\u0026#39;E_x002d_Mail\u0026#39;] Der Ausdruck referenziert das erste Element [0] aus dem Array \u0026lsquo;value\u0026rsquo; im body der Aktion get items.\nEingabe des Ausdrucks:\nAusdruck zur Ermittlung der User-E-Mail\nZusammenfassung Der zweite Teil der Serie zur erstellung eines einfachen Ticketsystems mit Microsoft 365 und Power Automate hat die Komponente Sharpoint bzw. eine Sharepoint-Liste ergänzt. Folgende Features werden damit unterstützt:\nDie Checkliste in der Planner-Aufgabe kann wieder vollumfänglich genutzt werden. Die Voraussetzung zur Überwachung der Statusänderung (z.B. wechsel von neues Ticket auf Ticket in Bearbeitung) ist gegeben. Ausblick Im dritten Teil dieser Reihe wird die erwähnte Statusüberwachung implementiert. Damit können Anwender über Aktionen am Ticket (z.B. Ticket ist nun in Bearbeitung, es gibt Rückfragen zum Ticket, etc.) informiert werden.\n","permalink":"https://jonaskufner.com/en/posts/ticketsystem-microsoft-365-sharepoint-referenzliste-statusbenachrichtigungen/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eHinweis\u003c/strong\u003e: Du liest hier menschgemachten Content. Die Funktion der hier beschriebenen Logik wurde getestet und entstammt keiner \u0026ldquo;KI-Phantasie\u0026rdquo;. Ich hoffe du findest hier Erkenntnis und Mehrwert für dich oder dein Unternehmen. Viel Freude beim Lesen.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eKurzfassung:\u003c/strong\u003e Zweiter Teil der Reihe zum Ticketsystem mit Microsoft 265 und Power Automate. Den ersten Teil findest du hier: \u003ca href=\"https://jonaskufner.com/en/posts/ticketsystem-microsoft-forms-planner-power-automate/\"\u003eEinfaches Ticketsystem mit Microsoft Forms, Planner \u0026amp; Power Automate – Schritt-für-Schritt zur schnellen Ticketlösung in Microsoft 365\u003c/a\u003e\u003c/p\u003e","title":"Ticketsystem mit Microsoft 365 – Teil 2: SharePoint-Referenzliste \u0026 Statusbenachrichtigungen"},{"content":"Here are some ways to get in touch:\nContact Form You can find my contact form here.\nLinkedIn Feel free to connect with me on LinkedIn — I look forward to hearing from you: https://www.linkedin.com/in/jonas-kufner-972b7064/\nYouTube I use my YouTube channel to present tutorials of working Power Platform solutions.\nIf you find the content helpful, I’d really appreciate a subscription, comment, or like.\nHere’s the channel: https://www.youtube.com/@JonasKufner\n","permalink":"https://jonaskufner.com/en/contact/","summary":"\u003cp\u003eHere are some ways to get in touch:\u003c/p\u003e\n\u003ch2 id=\"contact-form\"\u003eContact Form\u003c/h2\u003e\n\u003cp\u003eYou can find my contact form \u003ca href='https://forms.office.com/Pages/ResponsePage.aspx?id=tjXwfqXbKEimWrzVJg3sG_wnWSd2U1pJrsi4NiwnEHlUMjNPRlhZQzdUVURQWFNLUExYMTYwUzY5Ny4u\u0026embed=true' target='_blank'\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"linkedin\"\u003eLinkedIn\u003c/h2\u003e\n\u003cp\u003eFeel free to connect with me on LinkedIn — I look forward to hearing from you: \u003ca href=\"https://www.linkedin.com/in/jonas-kufner-972b7064/\"\u003ehttps://www.linkedin.com/in/jonas-kufner-972b7064/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"youtube\"\u003eYouTube\u003c/h2\u003e\n\u003cp\u003eI use my YouTube channel to present tutorials of working Power Platform solutions.\u003cbr\u003e\nIf you find the content helpful, I’d really appreciate a subscription, comment, or like.\u003cbr\u003e\nHere’s the channel: \u003ca href=\"https://www.youtube.com/@JonasKufner\"\u003ehttps://www.youtube.com/@JonasKufner\u003c/a\u003e\u003c/p\u003e","title":"Contact"},{"content":" Summary: This tutorial shows how to quickly build a simple ticket system using Microsoft Forms, Planner, and Power Automate – including Teams notifications when a ticket is created and a completion message when it’s closed.\nGo to Part 2\nTarget Picture \u0026amp; Prerequisites Goal: A simple ticket system that automatically converts submissions from Forms into Planner tasks, sorts them into buckets, and notifies the requester in Teams. Upon completion, a feedback message is automatically sent.\nPrerequisites\nMicrosoft 365 tenant with access to Forms, Planner (Tasks in Teams), Power Automate, and Teams Basic permissions to create flows and Planner plans Optional: a dedicated sandbox group for the Planner plan Architecture at a Glance For the entire ticket system, you only need 4 simple components:\nThe components of the ticket system.\nForms: Ticket submission (title, description, category e.g. hardware/software, name/email) Planner: Plan with buckets (e.g. “Hardware”, “Software”) – tickets are created here as tasks Power Automate #1 (When a new response is submitted – Forms):\nGet response → create Planner task → set details/description → write sender’s email to the checklist → sort into bucket by category → send Teams notification to the person Power Automate #2 (When a task is completed – Planner):\nReact to completion → read checklist from task (email) → get profile → send completion notification to the person in Teams Step 1: Microsoft Forms – Create the Ticket Form The first component – the Forms form – is provided to requesters so they can create new tickets.\nOpen Forms (e.g. via forms.office.com/) Create a new form, e.g. “Ticket System – YouTube” Add questions Ticket title (short answer, required) Description (long answer, required) Category (choice, e.g. Hardware, Software, required) Settings Record name/email (depending on tenant/privacy policy) → important for feedback. Test: Fill out and submit in preview mode. The finished form\nStep 2: Microsoft Planner – Create Plan \u0026amp; Buckets Planner (or the plan in Planner) is used to manage and process the created tickets.\nOpen Planner (Tasks in Teams or office.com → Planner). Create a new plan, e.g. “YouTube Ticket System”, in an appropriate Microsoft 365 group (e.g. Sandbox). Set up buckets: Hardware, Software Optional: Prepare priorities, labels/color categories. The finished task plan\nNote: Buckets are key for automatic categorization.\nStep 3: Power Automate Flow #1 – Create \u0026amp; Notify Ticket The first flow is used to react to newly created tickets (via the Forms form). The flow creates Planner tasks and informs the requester about the successful creation.\nGoal: Automatically create a Planner task for each form submission, set description/metadata, store the requester’s email, assign a bucket, and send a Teams message.\n3.1 Create Flow Automated cloud flow Trigger: When a new response is submitted (Microsoft Forms) Parameter: Form ID → your ticket form 3.2 Retrieve Response Details Action: Get response details (Microsoft Forms) Form Id: your form Response Id: Dynamic content → Response Id from trigger 3.3 Create Planner Task Action: Create a task (Planner) Group: your group (e.g. Sandbox) Plan: “YouTube Ticket System” Title: Form field “Ticket title” (Optional) Due date/priority 3.4 Update Task Details Action: Update task details (Planner) Task Id: ID from “Create a task” Description: Form field “Description” 3.5 Store Requester’s Email in Checklist Action: Update checklist item (Planner task) Task Id: from “Create a task” Checklist item Id: 0 Title: Responder’s Email from Forms (dynamic content) Is checked: false Why a checklist? It’s a lightweight way to store the email on the ticket and retrieve it later in the completion flow.\n3.6 Automatically Assign Buckets (Switch) Initialize variable Name: BucketId (String) Switch (on: Form field “Category”) Case “Hardware” → Set variable BucketId to Bucket ID “Hardware” Default (Software) → Set variable BucketId to Bucket ID “Software” Find bucket IDs (one-time): Temporarily add List buckets (Planner) → select group + plan → inspect output → copy IDs → remove helper action again.\nUpdate task (Planner) Task Id: from “Create a task” Bucket Id: variables('BucketId') 3.7 Teams Notification to Requester (personalized) Get user profile (Office 365 Users) User (UPN): Forms Responder’s Email Post message in a chat or channel (Teams) – Chat with Flow bot Recipient: Forms Responder’s Email Message (example): Hello @{outputs(\u0026#39;Get_user_profile\u0026#39;)?[\u0026#39;body/givenName\u0026#39;]}, your ticket \u0026#34;**@{outputs(\u0026#39;Get_response_details\u0026#39;)?[\u0026#39;body/\u0026lt;FormFieldTitle\u0026gt;\u0026#39;]}**\u0026#34; has been created. We’ll notify you once it’s completed. Replace \u0026lt;FormFieldTitle\u0026gt; with the internal name of your form field (often “Title”/“Ticket_Title”). The first flow processing the form information.\nStep 4: Power Automate Flow #2 – Automatically Notify Completion The second flow reacts when a task is completed and informs the requester that their ticket is done.\nGoal: As soon as a Planner task is Completed, the person from the form is notified in Teams.\n4.1 Create Flow Automated cloud flow Trigger: When a task is completed (Planner) Group: Sandbox Plan: YouTube Ticket System 4.2 Get Task Details (incl. Checklist) Action: Get task details (Planner) Task Id: Task Id from trigger 4.3 Extract Email from Checklist Depending on your environment, checklist can be an array or object. In many cases, the following (from the video) works:\nbody(\u0026#39;Get_task_details\u0026#39;)?[\u0026#39;checklist\u0026#39;][0]?[\u0026#39;value\u0026#39;]?[\u0026#39;title\u0026#39;] Alternatively, you can reference the first array element using first():\nfirst(body(\u0026#39;Get_task_details\u0026#39;)?[\u0026#39;checklist\u0026#39;])?[\u0026#39;value\u0026#39;][\u0026#39;title\u0026#39;] 4.4 Load Display Name Get user profile (Office 365 Users)\nUser (UPN): Email from 4.3 4.5 Send Teams Message Post message in a chat or channel (Teams) – Chat with Flow bot\nRecipient: Email from 4.3\nMessage (example):\nThe second flow informing requesters after completion.\nExtensions \u0026amp; Best Practices File attachments in the form: Enable file upload (consider storage/compliance); store the link in the task description or comment.\nAssignment by category: After task creation, use “Assign task” to automatically assign fixed owners per bucket.\nPriorities \u0026amp; due dates: Transfer from form fields.\nData storage: Instead of the checklist, persist email e.g. in description or Dataverse (for scalability).\nAlternative email notification: Use “Send an email (V2)” from Outlook – same email variable.\nMultilingual setups: Clearly name flows and fields (DE/EN) for mixed tenants.\nSecurity/privacy: Collect only necessary personal data; define deletion/retention periods.\nYouTube (German Version): Create a Ticket System with Microsoft 365 | Forms, Planner \u0026amp; Power Automate Step-by-StepVideo tutorial for this blog post (YouTube | external link)\nConclusion \u0026amp; Contact With Forms + Planner + Power Automate, you can quickly build an intentionally simple ticket system – ideal for small IT teams, clubs, or departments. It’s easily expandable (assignment, prioritization, Dataverse, approvals).\n👉 Questions or need help setting it up? Use my Contact – I can help with design, best practices, and scaling to the Power Platform.\n","permalink":"https://jonaskufner.com/en/posts/ticketsystem-microsoft-forms-planner-power-automate/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eSummary:\u003c/strong\u003e This tutorial shows how to quickly build a \u003cstrong\u003esimple ticket system\u003c/strong\u003e using \u003cstrong\u003eMicrosoft Forms\u003c/strong\u003e, \u003cstrong\u003ePlanner\u003c/strong\u003e, and \u003cstrong\u003ePower Automate\u003c/strong\u003e – including \u003cstrong\u003eTeams notifications\u003c/strong\u003e when a ticket is created and a \u003cstrong\u003ecompletion message\u003c/strong\u003e when it’s closed.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGo to \u003ca href=\"https://jonaskufner.com/en/posts/ticketsystem-microsoft-365-sharepoint-referenzliste-statusbenachrichtigungen/\"\u003ePart 2\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"target-picture--prerequisites\"\u003eTarget Picture \u0026amp; Prerequisites\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eGoal:\u003c/strong\u003e A simple ticket system that automatically converts submissions from \u003cstrong\u003eForms\u003c/strong\u003e into \u003cstrong\u003ePlanner\u003c/strong\u003e tasks, sorts them into buckets, and notifies the requester in \u003cstrong\u003eTeams\u003c/strong\u003e. Upon \u003cstrong\u003ecompletion\u003c/strong\u003e, a feedback message is automatically sent.\u003c/p\u003e","title":"Simple Ticket System with Microsoft Forms, Planner \u0026 Power Automate – Step-by-Step to a Quick Ticket Solution in Microsoft 365"}]